[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "planwise"
version = "0.2.0"
description = "A Python library for modeling retirement savings across various UK tax wrappers including Lifetime ISA (LISA), Stocks & Shares ISA, Self-Invested Personal Pension (SIPP) and workplace pensions."
readme = "README.md"
license = "MIT"
authors = [
    {name = "Planwise Team", email = "team@example.com"},
]
maintainers = [
    {name = "Planwise Team", email = "team@example.com"},
]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Financial and Insurance Industry",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    # Support Python 3.11 instead of the overly restrictive 3.13 requirement.
    "Programming Language :: Python :: 3.11",
    "Topic :: Office/Business :: Financial",
    "Topic :: Office/Business :: Financial :: Investment",
]
keywords = ["planwise", "finance", "retirement", "pension", "ISA", "SIPP", "UK", "investment"]
dependencies = [
    "pandas>=2.0.0",
    "numpy>=1.24.0",
]
# Relax the minimum Python requirement so the package can be installed and tested
# under the container's Python runtime (Python 3.11). Using a more flexible
# version constraint allows developers on slightly older interpreters to run
# this code without having to install a bleeding‑edge version.
requires-python = ">=3.11"

[project.optional-dependencies]
plotting = [
    "altair>=5.0.0",
    "plotly>=5.0.0",
    "matplotlib>=3.10.0",
]
app = [
    "streamlit>=1.48.0",
    "altair>=5.0.0",
]
dev = [
    "pytest>=7.0.0",
    "pytest-cov>=4.0.0",
    "black>=23.0.0",
    "isort>=5.12.0",
    "flake8>=6.0.0",
    "mypy>=1.0.0",
    "pre-commit>=3.0.0",
]
docs = [
    "sphinx>=7.0.0",
    "sphinx-rtd-theme>=1.3.0",
    "myst-parser>=2.0.0",
]
all = [
    "planwise[plotting,app,dev,docs]",
]

[project.urls]
Documentation = "https://github.com/ivanchc/planwise#readme"
Repository = "https://github.com/ivanchc/planwise"
Changelog = "https://github.com/ivanchc/planwise/blob/main/CHANGELOG.md"
"Bug Tracker" = "https://github.com/ivanchc/planwise/issues"

[project.scripts]
planwise = "planwise.cli:main"

[tool.hatch.build.targets.wheel]
packages = ["src/planwise"]

[tool.hatch.build.targets.sdist]
include = [
    "/src",
    "/tests",
    "/docs",
    "/README.md",
    "/LICENSE",
    "/CHANGELOG.md",
]

# Black configuration
[tool.black]
line-length = 88
# Target Python version adjusted to match the supported interpreter (3.11).
target-version = ['py311']
include = '\.pyi?$'

# isort configuration
[tool.isort]
profile = "black"
line_length = 88
known_first_party = ["planwise"]

# pytest configuration
[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
addopts = [
    "--cov=planwise",
    "--cov-report=term-missing",
    "--cov-report=html",
    "--strict-markers",
    "--strict-config",
]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
]

# mypy configuration
[tool.mypy]
python_version = "3.11"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[[tool.mypy.overrides]]
module = [
    "altair.*",
    "streamlit.*",
]
ignore_missing_imports = true

# Coverage configuration
[tool.coverage.run]
source = ["src"]
omit = [
    "*/tests/*",
    "*/test_*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]
